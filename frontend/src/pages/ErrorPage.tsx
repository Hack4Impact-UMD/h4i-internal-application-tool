import {
  Link,
  useRouteError,
  isRouteErrorResponse,
  ErrorResponse,
} from "react-router-dom";

// there is a React Router equivalent but it is specific to ErrorResponses generated by itself
function isMyErrorResponse(error: unknown): error is ErrorResponse {
  return (
    typeof error === "object" &&
    error !== null &&
    "status" in error &&
    typeof error.status === "number" &&
    "statusText" in error &&
    typeof error.statusText === "string"
  );
}

// TODO: replace placeholder error messages throughout the app with this component
export default function ErrorPage() {
  const error = useRouteError();

  console.log("error: " + JSON.stringify(error));
  console.log("error: " + isRouteErrorResponse(error));

  return (
    <div className="flex flex-col items-center justify-center h-screen bg-gray-100 text-center p-4">
      <img
        src="/h4i-logo.png"
        alt="Hack4Impact Logo"
        className="w-40 h-40 mb-8"
      />
      {isRouteErrorResponse(error) ||
        (isMyErrorResponse(error) && (
          <>
            <h1 className="text-6xl font-bold text-gray-800">{error.status}</h1>
            <p className="text-2xl mt-4 text-gray-600">{error.statusText}</p>
            {error.data && (
              <p className="text-md text-muted-foreground mt-2 mb-8">
                {error.data}
              </p>
            )}
          </>
        ))}
      {error instanceof Error && (
        <>
          <h1 className="text-4xl font-bold text-gray-800">
            Something went wrong:
          </h1>
          <p className="text-2xl mt-4 text-gray-600">{error.message}</p>
          <p className="text-md text-muted-foreground mt-2 mb-8 mx-28">
            {error.stack}
          </p>
        </>
      )}
      <Link
        to="/"
        className="bg-blue hover:bg-blue/80 transition text-white font-bold py-2 px-4 rounded"
      >
        Take me home!
      </Link>
    </div>
  );
}
